{"ast":null,"code":"var _jsxFileName = \"/home/andy/Sites/tarot/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport useSWR from 'swr';\nimport Layout from '../components/MyLayout';\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nconst {\n  query\n} = useRouter();\nconst {\n  data,\n  error\n} = useSWR('/api/tarot', fetcher);\nconst name = data === null || data === void 0 ? void 0 : data.name;\nlet number = data === null || data === void 0 ? void 0 : data.number;\nlet fortune = data === null || data === void 0 ? void 0 : data.fortune_telling;\nlet keywords = data === null || data === void 0 ? void 0 : data.keywords;\nlet light = data === null || data === void 0 ? void 0 : data.meanings.light;\nlet shadow = data === null || data === void 0 ? void 0 : data.meanings.shadow;\nlet image = data === null || data === void 0 ? void 0 : data.img;\nlet questions = data === null || data === void 0 ? void 0 : data.questions;\nif (!data) number = 'Loading...';\nif (error) number = 'Failed to fetch a card.';\nlet fortuneList = [];\n\nfor (var x in fortune) {\n  fortuneList.push(__jsx(\"p\", {\n    key: x,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 22\n    }\n  }, fortune[x]));\n}\n\nlet keywordList = [];\n\nfor (var y in keywords) {\n  let mid = keywords[y];\n  mid = mid[0].toUpperCase() + mid.substring(1);\n  keywordList.push(__jsx(\"li\", {\n    key: y,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 22\n    }\n  }, mid));\n}\n\nlet lightList = [];\n\nfor (var l in light) {\n  lightList.push(__jsx(\"li\", {\n    key: l,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 20\n    }\n  }, light[l]));\n}\n\nlet shadowList = [];\n\nfor (var d in shadow) {\n  shadowList.push(__jsx(\"li\", {\n    key: d,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, shadow[d]));\n}\n\nlet questionList = [];\n\nfor (var q in questions) {\n  questionList.push(__jsx(\"li\", {\n    key: q,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 23\n    }\n  }, questions[q]));\n}\n\nexport default function Index() {\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, __jsx(\"main\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), __jsx(\"h3\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Ask a question outloud and press the button below to generate one card to answer the question.\"), __jsx(\"h5\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"An interpretation of the meaning of the card will appear below it.\"), __jsx(\"button\", {\n    style: {\n      display: \"flex\",\n      margin: \"auto\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Draw Card\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), __jsx(\"img\", {\n    style: {\n      display: \"flex\",\n      margin: \"auto\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    src: image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 45\n    }\n  }, number)), __jsx(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 45\n    }\n  }, name)), __jsx(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 45\n    }\n  }, fortuneList)), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 16\n    }\n  }, \"Questions to ask:\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 40\n    }\n  }, questionList)), __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, __jsx(\"span\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 37\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 72\n    }\n  }, \"Light Meanings:\")), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 101\n    }\n  }, lightList)), __jsx(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 37\n    }\n  }, \"Dark Meanings:\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 58\n    }\n  }, shadowList)), __jsx(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 37\n    }\n  }, \"Keywords:\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 53\n    }\n  }, keywordList))))));\n}","map":{"version":3,"sources":["/home/andy/Sites/tarot/pages/index.js"],"names":["useRouter","useSWR","Layout","fetcher","url","fetch","then","r","json","query","data","error","name","number","fortune","fortune_telling","keywords","light","meanings","shadow","image","img","questions","fortuneList","x","push","keywordList","y","mid","toUpperCase","substring","lightList","l","shadowList","d","questionList","q","Index","textAlign","display","margin","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router';\nimport useSWR from 'swr';\nimport Layout from '../components/MyLayout';\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\n\n  const { query } = useRouter();\n  const { data, error } = useSWR('/api/tarot', fetcher);\n\n  const name = data?.name;\n  let number = data?.number;\n  let fortune = data?.fortune_telling;\n  let keywords = data?.keywords;\n  let light = data?.meanings.light;\n  let shadow = data?.meanings.shadow;\n  let image = data?.img;\n  let questions = data?.questions\n  if (!data) number = 'Loading...';\n  if (error) number = 'Failed to fetch a card.';\n\n  let fortuneList = []\n  for (var x in fortune) {\n    fortuneList.push(<p key={x}>{fortune[x]}</p>)\n  }\n\n  let keywordList = []\n  for (var y in keywords) {\n    let mid = keywords[y]\n    mid = mid[0].toUpperCase()+ mid.substring(1)\n    keywordList.push(<li key={y}>{mid}</li>)\n  } \n\n  let lightList = []\n  for (var l in light) {\n    lightList.push(<li key={l}>{light[l]}</li>)\n  }\n\n  let shadowList = []\n  for (var d in shadow) {\n    shadowList.push(<li key={d}>{shadow[d]}</li>)\n  }\n\n  let questionList = []\n  for (var q in questions) {\n    questionList.push(<li key={q}>{questions[q]}</li>)\n  }\n\nexport default function Index() {\n  return (\n    <Layout>\n      <div className=\"container\">\n        <main className=\"\">\n          <br />\n          <h3 style={{textAlign:\"center\"}}>Ask a question outloud and press the button below to generate one card to answer the question.</h3>\n          <h5 style={{textAlign:\"center\"}}>An interpretation of the meaning of the card will appear below it.</h5>\n          <button style={{display: \"flex\", margin:\"auto\", alignItems:\"center\", justifyContent:\"center\"}}className=\"button\">Draw Card</button>\n          <br/>\n          <img style={{display: \"flex\", margin:\"auto\", alignItems:\"center\", justifyContent:\"center\"}} src={image} />\n          <div style={{textAlign:\"center\"}}><h1>{number}</h1></div>\n          <div style={{textAlign:\"center\"}}><h2>{name}</h2></div>\n          <div style={{textAlign:\"center\"}}><h4>{fortuneList}</h4></div>\n          <div><b>Questions to ask:</b><ul>{questionList}</ul></div>\n          <div className=\"row\">\n            <div className=\"column\"><span style={{textAlign:\"center\"}}><b>Light Meanings:</b></span><ul>{lightList}</ul></div>\n            <div className=\"column\"><b>Dark Meanings:</b><ul>{shadowList}</ul></div>\n            <div className=\"column\"><b>Keywords:</b><ul>{keywordList}</ul></div>\n          </div>\n\n        </main>\n      </div>\n    </Layout>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}