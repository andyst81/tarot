{"ast":null,"code":"var _jsxFileName = \"/home/andy/Sites/tarot/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport useSWR from 'swr';\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nexport default function Index() {\n  const {\n    query\n  } = useRouter();\n  const {\n    data,\n    error\n  } = useSWR('/api/tarot', fetcher);\n  const name = data === null || data === void 0 ? void 0 : data.name;\n  let number = data === null || data === void 0 ? void 0 : data.number;\n  let fortune = data === null || data === void 0 ? void 0 : data.fortune_telling;\n  let keywords = data === null || data === void 0 ? void 0 : data.keywords;\n  let light = data === null || data === void 0 ? void 0 : data.meanings.light;\n  let shadow = data === null || data === void 0 ? void 0 : data.meanings.shadow;\n  let image = data === null || data === void 0 ? void 0 : data.img;\n  if (!data) number = 'Loading...';\n  if (error) number = 'Failed to fetch a card.';\n  let fortuneList = [];\n\n  for (var x in fortune) {\n    fortuneList.push(__jsx(\"p\", {\n      key: x,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 22\n      }\n    }, fortune[x]));\n  }\n\n  let keywordList = [];\n\n  for (var y in keywords) {\n    let mid = keywords[y];\n    mid = mid[0].toUpperCase() + mid.substring(1);\n    keywordList.push(__jsx(\"li\", {\n      key: y,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 22\n      }\n    }, mid));\n  }\n\n  let lightList = [];\n\n  for (var l in light) {\n    lightList.push(__jsx(\"li\", {\n      key: l,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 20\n      }\n    }, light[l]));\n  }\n\n  let shadowList = [];\n\n  for (var d in shadow) {\n    shadowList.push(__jsx(\"li\", {\n      key: d,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, shadow[d]));\n  }\n\n  return __jsx(\"div\", {\n    className: \"container mx-auto px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, __jsx(\"main\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, __jsx(\"img\", {\n    className: \"pt-10 mx-auto\",\n    src: image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"text-center text-5xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, number), __jsx(\"div\", {\n    className: \"text-center text-3xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, name), __jsx(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, fortuneList), __jsx(\"div\", {\n    className: \"grid grid-cols-3 gap-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Light Meanings:\", lightList), __jsx(\"div\", {\n    className: \"...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Dark Meanings:\", shadowList), __jsx(\"div\", {\n    className: \"...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Keywords:\", keywordList))));\n}","map":{"version":3,"sources":["/home/andy/Sites/tarot/pages/index.js"],"names":["useRouter","useSWR","fetcher","url","fetch","then","r","json","Index","query","data","error","name","number","fortune","fortune_telling","keywords","light","meanings","shadow","image","img","fortuneList","x","push","keywordList","y","mid","toUpperCase","substring","lightList","l","shadowList","d"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router';\nimport useSWR from 'swr';\n\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nexport default function Index() {\n  const { query } = useRouter();\n  const { data, error } = useSWR('/api/tarot', fetcher);\n\n  const name = data?.name;\n  let number = data?.number;\n  let fortune = data?.fortune_telling;\n  let keywords = data?.keywords;\n  let light = data?.meanings.light;\n  let shadow = data?.meanings.shadow;\n  let image = data?.img;\n  if (!data) number = 'Loading...';\n  if (error) number = 'Failed to fetch a card.';\n\n  let fortuneList = []\n  for (var x in fortune) {\n    fortuneList.push(<p key={x}>{fortune[x]}</p>)\n  }\n\n  let keywordList = []\n  for (var y in keywords) {\n    let mid = keywords[y]\n    mid = mid[0].toUpperCase()+ mid.substring(1)\n    keywordList.push(<li key={y}>{mid}</li>)\n  } \n\n  let lightList = []\n  for (var l in light) {\n    lightList.push(<li key={l}>{light[l]}</li>)\n  }\n\n  let shadowList = []\n  for (var d in shadow) {\n    shadowList.push(<li key={d}>{shadow[d]}</li>)\n  }\n\n  return (\n    <div className=\"container mx-auto px-4\">\n    <main className=\"\">\n      <img className=\"pt-10 mx-auto\" src={image} />\n      <div className=\"text-center text-5xl\">{number}</div>\n      <div className=\"text-center text-3xl\">{name}</div>\n      <div className=\"text-center\">{fortuneList}</div>\n      <div className=\"grid grid-cols-3 gap-4\">\n        <div className=\"...\">Light Meanings:{lightList}</div>\n        <div className=\"...\">Dark Meanings:{shadowList}</div>\n        <div className=\"...\">Keywords:{keywordList}</div>\n      </div>\n\n    </main>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}