{"ast":null,"code":"var _jsxFileName = \"/home/andy/Sites/tarot/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport useSWR from 'swr';\nimport Layout from '../components/MyLayout';\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nexport default function Index() {\n  const {\n    query\n  } = useRouter();\n  const {\n    data,\n    error\n  } = useSWR('/api/tarot', fetcher);\n  const name = data === null || data === void 0 ? void 0 : data.name;\n  let number = data === null || data === void 0 ? void 0 : data.number;\n  let fortune = data === null || data === void 0 ? void 0 : data.fortune_telling;\n  let keywords = data === null || data === void 0 ? void 0 : data.keywords;\n  let light = data === null || data === void 0 ? void 0 : data.meanings.light;\n  let shadow = data === null || data === void 0 ? void 0 : data.meanings.shadow;\n  let image = data === null || data === void 0 ? void 0 : data.img;\n  let questions = data === null || data === void 0 ? void 0 : data.questions;\n  if (!data) number = 'Loading...';\n  if (error) number = 'Failed to fetch a card.';\n  let fortuneList = [];\n\n  for (var x in fortune) {\n    fortuneList.push(__jsx(\"p\", {\n      key: x,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 22\n      }\n    }, fortune[x]));\n  }\n\n  let keywordList = [];\n\n  for (var y in keywords) {\n    let mid = keywords[y];\n    mid = mid[0].toUpperCase() + mid.substring(1);\n    keywordList.push(__jsx(\"li\", {\n      key: y,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 22\n      }\n    }, mid));\n  }\n\n  let lightList = [];\n\n  for (var l in light) {\n    lightList.push(__jsx(\"li\", {\n      key: l,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 20\n      }\n    }, light[l]));\n  }\n\n  let shadowList = [];\n\n  for (var d in shadow) {\n    shadowList.push(__jsx(\"li\", {\n      key: d,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, shadow[d]));\n  }\n\n  let questionList = [];\n\n  for (var q in questions) {\n    questionList.push(__jsx(\"li\", {\n      key: q,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 23\n      }\n    }, questions[q]));\n  }\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, __jsx(\"main\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    className: \"styles.image\",\n    src: image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }, number)), __jsx(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }, name)), __jsx(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }, fortuneList)), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 16\n    }\n  }, \"Questions to ask:\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 40\n    }\n  }, questionList)), __jsx(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 37\n    }\n  }, \"Light Meanings:\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 59\n    }\n  }, lightList)), __jsx(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 37\n    }\n  }, \"Dark Meanings:\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 58\n    }\n  }, shadowList)), __jsx(\"div\", {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 37\n    }\n  }, \"Keywords:\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 53\n    }\n  }, keywordList))))));\n}\nvar styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    flexDirection: 'row',\n    backgroundColor: 'lightgray',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  centered: {\n    fontWeight: 'bold',\n    fontSize: 18,\n    marginTop: 0,\n    width: 200,\n    height: 80,\n    backgroundColor: 'yellow',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["/home/andy/Sites/tarot/pages/index.js"],"names":["useRouter","useSWR","Layout","fetcher","url","fetch","then","r","json","Index","query","data","error","name","number","fortune","fortune_telling","keywords","light","meanings","shadow","image","img","questions","fortuneList","x","push","keywordList","y","mid","toUpperCase","substring","lightList","l","shadowList","d","questionList","q","styles","StyleSheet","create","flex","flexDirection","backgroundColor","justifyContent","alignItems","centered","fontWeight","fontSize","marginTop","width","height"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router';\nimport useSWR from 'swr';\nimport Layout from '../components/MyLayout';\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nexport default function Index() {\n  const { query } = useRouter();\n  const { data, error } = useSWR('/api/tarot', fetcher);\n\n  const name = data?.name;\n  let number = data?.number;\n  let fortune = data?.fortune_telling;\n  let keywords = data?.keywords;\n  let light = data?.meanings.light;\n  let shadow = data?.meanings.shadow;\n  let image = data?.img;\n  let questions = data?.questions\n  if (!data) number = 'Loading...';\n  if (error) number = 'Failed to fetch a card.';\n\n  let fortuneList = []\n  for (var x in fortune) {\n    fortuneList.push(<p key={x}>{fortune[x]}</p>)\n  }\n\n  let keywordList = []\n  for (var y in keywords) {\n    let mid = keywords[y]\n    mid = mid[0].toUpperCase()+ mid.substring(1)\n    keywordList.push(<li key={y}>{mid}</li>)\n  } \n\n  let lightList = []\n  for (var l in light) {\n    lightList.push(<li key={l}>{light[l]}</li>)\n  }\n\n  let shadowList = []\n  for (var d in shadow) {\n    shadowList.push(<li key={d}>{shadow[d]}</li>)\n  }\n\n  let questionList = []\n  for (var q in questions) {\n    questionList.push(<li key={q}>{questions[q]}</li>)\n  }\n\n  return (\n    <Layout>\n      <div className=\"container\">\n        <main className=\"\">\n          <img className=\"styles.image\" src={image} />\n          <div className=\"\"><h1>{number}</h1></div>\n          <div className=\"\"><h2>{name}</h2></div>\n          <div className=\"\"><h4>{fortuneList}</h4></div>\n          <div><b>Questions to ask:</b><ul>{questionList}</ul></div>\n          <div className=\"row\">\n            <div className=\"column\"><b>Light Meanings:</b><ul>{lightList}</ul></div>\n            <div className=\"column\"><b>Dark Meanings:</b><ul>{shadowList}</ul></div>\n            <div className=\"column\"><b>Keywords:</b><ul>{keywordList}</ul></div>\n          </div>\n\n        </main>\n      </div>\n    </Layout>\n  );\n}\n\nvar styles = StyleSheet.create({\n\n  image: {\n      flex: 1,\n      flexDirection: 'row',\n      backgroundColor: 'lightgray',\n      justifyContent: 'center',\n      alignItems: 'center',\n  },\n  centered: {\n      fontWeight: 'bold',\n      fontSize: 18,\n      marginTop: 0,\n      width: 200,\n      height: 80,\n      backgroundColor: 'yellow',\n      justifyContent: 'center',\n      alignItems: 'center',\n  },\n\n});\n"]},"metadata":{},"sourceType":"module"}