{"ast":null,"code":"var _jsxFileName = \"/home/andy/Sites/tarot/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport useSWR from 'swr';\nimport \"tailwindcss/tailwind.css\";\n\nfunction fetcher(url) {\n  return fetch(url).then(function (r) {\n    return r.json();\n  });\n}\n\nexport default function Index() {\n  _s();\n\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var _useSWR = useSWR('/api/tarot', fetcher),\n      data = _useSWR.data,\n      error = _useSWR.error; // The following line has optional chaining, added in Next.js v9.1.5,\n  // is the same as `data && data.name`\n\n\n  var name = data === null || data === void 0 ? void 0 : data.name;\n  var number = data === null || data === void 0 ? void 0 : data.number;\n  var fortune = data === null || data === void 0 ? void 0 : data.fortune_telling;\n  var keywords = data === null || data === void 0 ? void 0 : data.keywords;\n  var image = data === null || data === void 0 ? void 0 : data.img;\n  if (!data) number = 'Loading...';\n  if (error) number = 'Failed to fetch a card.';\n  var fortuneList = [];\n\n  for (var x in fortune) {\n    fortuneList.push(__jsx(\"p\", {\n      key: x,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 22\n      }\n    }, fortune[x]));\n  }\n\n  var keywordList = [];\n\n  for (var y in keywords) {\n    keywordList.push(__jsx(\"li\", {\n      key: y,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 22\n      }\n    }, keywords[y]));\n  }\n\n  return __jsx(\"div\", {\n    className: \"container mx-auto px-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(\"main\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(\"img\", {\n    className: \"pt-10 mx-auto\",\n    src: image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"text-center text-5xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, number), __jsx(\"div\", {\n    className: \"text-center text-3xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, name), __jsx(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, fortuneList), __jsx(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Keywords:\", keywordList)));\n}\n\n_s(Index, \"th3WLb/Zwfwxb1mBR352amKHaBQ=\", false, function () {\n  return [useRouter, useSWR];\n});\n\n_c = Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/home/andy/Sites/tarot/pages/index.js"],"names":["useRouter","useSWR","fetcher","url","fetch","then","r","json","Index","query","data","error","name","number","fortune","fortune_telling","keywords","image","img","fortuneList","x","push","keywordList","y"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAO,0BAAP;;AAGA,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,SAAOC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,GAAjB,CAAP;AACD;;AAED,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAAA,mBACZR,SAAS,EADG;AAAA,MACtBS,KADsB,cACtBA,KADsB;;AAAA,gBAENR,MAAM,CAAC,YAAD,EAAeC,OAAf,CAFA;AAAA,MAEtBQ,IAFsB,WAEtBA,IAFsB;AAAA,MAEhBC,KAFgB,WAEhBA,KAFgB,EAG9B;AACA;;;AACA,MAAMC,IAAI,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEE,IAAnB;AACA,MAAIC,MAAM,GAAGH,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,MAAnB;AACA,MAAIC,OAAO,GAAGJ,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEK,eAApB;AACA,MAAIC,QAAQ,GAAGN,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEM,QAArB;AACA,MAAIC,KAAK,GAAGP,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEQ,GAAlB;AACA,MAAI,CAACR,IAAL,EAAWG,MAAM,GAAG,YAAT;AACX,MAAIF,KAAJ,EAAWE,MAAM,GAAG,yBAAT;AAEX,MAAIM,WAAW,GAAG,EAAlB;;AACA,OAAK,IAAIC,CAAT,IAAcN,OAAd,EAAuB;AACrBK,IAAAA,WAAW,CAACE,IAAZ,CAAiB;AAAG,MAAA,GAAG,EAAED,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYN,OAAO,CAACM,CAAD,CAAnB,CAAjB;AACD;;AAED,MAAIE,WAAW,GAAG,EAAlB;;AACA,OAAK,IAAIC,CAAT,IAAcP,QAAd,EAAwB;AACtBM,IAAAA,WAAW,CAACD,IAAZ,CAAiB;AAAI,MAAA,GAAG,EAAEE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaP,QAAQ,CAACO,CAAD,CAArB,CAAjB;AACD;;AAGD,SACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAM,IAAA,SAAS,EAAC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,GAAG,EAAEN,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCJ,MAAvC,CAFF,EAGE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCD,IAAvC,CAHF,EAIE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BO,WAA9B,CAJF,EAKE;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA4BG,WAA5B,CALF,CADA,CADF;AAWD;;GAnCuBd,K;UACJR,S,EACMC,M;;;KAFFO,K","sourcesContent":["import { useRouter } from 'next/router';\nimport useSWR from 'swr';\nimport \"tailwindcss/tailwind.css\";\n\n\nfunction fetcher(url) {\n  return fetch(url).then(r => r.json());\n}\n\nexport default function Index() {\n  const { query } = useRouter();\n  const { data, error } = useSWR('/api/tarot', fetcher);\n  // The following line has optional chaining, added in Next.js v9.1.5,\n  // is the same as `data && data.name`\n  const name = data?.name;\n  let number = data?.number;\n  let fortune = data?.fortune_telling\n  let keywords = data?.keywords\n  let image = data?.img\n  if (!data) number = 'Loading...';\n  if (error) number = 'Failed to fetch a card.';\n\n  let fortuneList = []\n  for (var x in fortune) {\n    fortuneList.push(<p key={x}>{fortune[x]}</p>)\n  }\n\n  let keywordList = []\n  for (var y in keywords) {\n    keywordList.push(<li key={y}>{keywords[y]}</li>)\n  } \n\n\n  return (\n    <div className=\"container mx-auto px-4\">\n    <main className=\"\">\n      <img className=\"pt-10 mx-auto\" src={image} />\n      <div className=\"text-center text-5xl\">{number}</div>\n      <div className=\"text-center text-3xl\">{name}</div>\n      <div className=\"text-center\">{fortuneList}</div>\n      <div className=\"\">Keywords:{keywordList}</div>\n    </main>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}