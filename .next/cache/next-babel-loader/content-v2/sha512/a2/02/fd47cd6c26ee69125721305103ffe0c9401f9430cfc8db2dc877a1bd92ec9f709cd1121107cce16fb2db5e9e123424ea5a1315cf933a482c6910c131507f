{"ast":null,"code":"var _jsxFileName = \"/home/andy/Sites/tarot/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport useSWR from 'swr';\nimport Layout from '../components/MyLayout';\n\nclass Index extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      showCard: false\n    };\n\n    function fetcher(url) {\n      return fetch(url).then(r => r.json());\n    } // const { query } = useRouter();\n\n\n    const {\n      data,\n      error\n    } = useSWR('/api/tarot', fetcher);\n    if (!data) number = 'Loading...';\n    if (error) number = 'Failed to fetch a card.';\n    const cardName = data === null || data === void 0 ? void 0 : data.name;\n    let number = data === null || data === void 0 ? void 0 : data.number;\n    let fortune = data === null || data === void 0 ? void 0 : data.fortune_telling;\n    let keywords = data === null || data === void 0 ? void 0 : data.keywords;\n    let light = data === null || data === void 0 ? void 0 : data.meanings.light;\n    let shadow = data === null || data === void 0 ? void 0 : data.meanings.shadow;\n    let image = data === null || data === void 0 ? void 0 : data.img;\n    let questions = data === null || data === void 0 ? void 0 : data.questions;\n    let fortuneList = [];\n\n    for (var x in fortune) {\n      fortuneList.push(__jsx(\"p\", {\n        key: x,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 24\n        }\n      }, fortune[x]));\n    }\n\n    let keywordList = [];\n\n    for (var y in keywords) {\n      let mid = keywords[y];\n      mid = mid[0].toUpperCase() + mid.substring(1);\n      keywordList.push(__jsx(\"li\", {\n        key: y,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 24\n        }\n      }, mid));\n    }\n\n    let lightList = [];\n\n    for (var l in light) {\n      lightList.push(__jsx(\"li\", {\n        key: l,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 22\n        }\n      }, light[l]));\n    }\n\n    let shadowList = [];\n\n    for (var d in shadow) {\n      shadowList.push(__jsx(\"li\", {\n        key: d,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 23\n        }\n      }, shadow[d]));\n    }\n\n    let questionList = [];\n\n    for (var q in questions) {\n      questionList.push(__jsx(\"li\", {\n        key: q,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }\n      }, questions[q]));\n    }\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }\n    }, __jsx(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, __jsx(\"main\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }), __jsx(\"h3\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, \"Ask a question outloud and press the button below to generate one card to answer the question.\"), __jsx(\"h5\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, \"An interpretation of the meaning of the card will appear below it.\"), __jsx(\"button\", {\n      style: {\n        display: \"flex\",\n        margin: \"auto\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      className: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, \"Show Card\"), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }), __jsx(\"div\", {\n      style: {\n        display: 'block'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, __jsx(\"img\", {\n      style: {\n        display: \"flex\",\n        margin: \"auto\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      src: image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }), __jsx(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 47\n      }\n    }, number)), __jsx(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 47\n      }\n    }, cardName)), __jsx(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 47\n      }\n    }, fortuneList)), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 18\n      }\n    }, \"Questions to ask:\"), __jsx(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 42\n      }\n    }, questionList)), __jsx(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 39\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 74\n      }\n    }, \"Light Meanings:\")), __jsx(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 103\n      }\n    }, lightList)), __jsx(\"div\", {\n      className: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 39\n      }\n    }, \"Dark Meanings:\"), __jsx(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 60\n      }\n    }, shadowList)), __jsx(\"div\", {\n      className: \"column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 39\n      }\n    }, \"Keywords:\"), __jsx(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 55\n      }\n    }, keywordList)))))));\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["/home/andy/Sites/tarot/pages/index.js"],"names":["useRouter","useSWR","Layout","Index","React","Component","constructor","props","state","showCard","fetcher","url","fetch","then","r","json","data","error","number","cardName","name","fortune","fortune_telling","keywords","light","meanings","shadow","image","img","questions","fortuneList","x","push","keywordList","y","mid","toUpperCase","substring","lightList","l","shadowList","d","questionList","q","render","textAlign","display","margin","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { useRouter } from 'next/router';\nimport useSWR from 'swr';\nimport Layout from '../components/MyLayout';\n\nclass Index extends React.Component {\n  constructor(props) {\n    super()\n    this.state = {\n      showCard: false\n    }\n\n    function fetcher(url) {\n      return fetch(url).then(r => r.json());\n    }\n\n    // const { query } = useRouter();\n    const { data, error } = useSWR('/api/tarot', fetcher);\n    \n    if (!data) number = 'Loading...';\n    if (error) number = 'Failed to fetch a card.';\n \n    const cardName = data?.name;\n    let number = data?.number;\n    let fortune = data?.fortune_telling;\n    let keywords = data?.keywords;\n    let light = data?.meanings.light;\n    let shadow = data?.meanings.shadow;\n    let image = data?.img;\n    let questions = data?.questions\n  \n    let fortuneList = []\n    for (var x in fortune) {\n      fortuneList.push(<p key={x}>{fortune[x]}</p>)\n    }\n  \n    let keywordList = []\n    for (var y in keywords) {\n      let mid = keywords[y]\n      mid = mid[0].toUpperCase()+ mid.substring(1)\n      keywordList.push(<li key={y}>{mid}</li>)\n    } \n  \n    let lightList = []\n    for (var l in light) {\n      lightList.push(<li key={l}>{light[l]}</li>)\n    }\n  \n    let shadowList = []\n    for (var d in shadow) {\n      shadowList.push(<li key={d}>{shadow[d]}</li>)\n    }\n  \n    let questionList = []\n    for (var q in questions) {\n      questionList.push(<li key={q}>{questions[q]}</li>)\n    }\n  }\n\n  render () {\n    return (\n    <Layout>\n      <div className=\"container\">\n        <main className=\"\">\n          <br />\n          <h3 style={{textAlign:\"center\"}}>Ask a question outloud and press the button below to generate one card to answer the question.</h3>\n          <h5 style={{textAlign:\"center\"}}>An interpretation of the meaning of the card will appear below it.</h5>\n          <button style={{display: \"flex\", margin:\"auto\", alignItems:\"center\", justifyContent:\"center\"}}className=\"button\">Show Card</button>\n          <br/>\n          <div style={{display:'block'}}>\n            <img style={{display: \"flex\", margin:\"auto\", alignItems:\"center\", justifyContent:\"center\"}} src={image} />\n            <div style={{textAlign:\"center\"}}><h1>{number}</h1></div>\n            <div style={{textAlign:\"center\"}}><h2>{cardName}</h2></div>\n            <div style={{textAlign:\"center\"}}><h4>{fortuneList}</h4></div>\n            <div><b>Questions to ask:</b><ul>{questionList}</ul></div>\n            <div className=\"row\">\n              <div className=\"column\"><span style={{textAlign:\"center\"}}><b>Light Meanings:</b></span><ul>{lightList}</ul></div>\n              <div className=\"column\"><b>Dark Meanings:</b><ul>{shadowList}</ul></div>\n              <div className=\"column\"><b>Keywords:</b><ul>{keywordList}</ul></div>\n            </div>\n          </div>\n\n        </main>\n      </div>\n    </Layout>\n    )\n  };\n}\n\nexport default Index"]},"metadata":{},"sourceType":"module"}